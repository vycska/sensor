set CHIPNAME lpc824
set FLASHNAME $CHIPNAME.flash
set TARGETNAME $CHIPNAME.cpu
set CPUTAPID 0x0bb11477
set CCLK 12000

interface jlink
transport select swd
adapter_khz 1000

reset_config srst_only srst_open_drain
adapter_nsrst_assert_width 10
adapter_nsrst_delay 10

swd newdap $CHIPNAME cpu -irlen 4 -expected-id $CPUTAPID

target create $TARGETNAME cortex_m -chain-position $TARGETNAME -endian little
$TARGETNAME configure -work-area-phys 0x10000000 -work-area-size 0x800 -work-area-backup 0
$TARGETNAME configure -event reset-init {
   echo "evento reset-init handleris"
}
$TARGETNAME configure -event gdb-attach {
   echo "evento gdb-attach handleris"
}

flash bank $FLASHNAME lpc2000 0x0 32768 0 0 $TARGETNAME lpc800 $CCLK calc_checksum

gdb_flash_program enable
gdb_memory_map enable
gdb_target_description enable
gdb_port 3333
telnet_port 4444

#terminate the configuration stage and enter the run stage [number of commands become available]
init

#perform as hard a reset as possible, immediately halt the target and execute the reset-init script
reset init

echo "========================================="

#poll the current target for its current state
poll

#display various hardware related information
jlink hwstatus

#summarize information about the target
set a [$TARGETNAME cget -type]
set b [$TARGETNAME cget -endian]
set c [$TARGETNAME cget -work-area-size]
set d [$TARGETNAME curstate]
puts [format "Type: %s, Endian: %s, Work area size: %d, State: %s" $a $b $c $d]
